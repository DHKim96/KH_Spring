<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd">
	
	<!-- 
		root-context.xml
		서버 구동과 동시에 web.xml 을 거쳐서 바로 로딩되는 문서
		=> 서버 구동과 동시에 바로 세팅(bean 으로 등록)해야하는 내용들을 작성하면 됨
		DB 연결 설정, transaction 처리, 내외부 모듈 연동 등
	 -->
	 
	<bean class="org.apache.commons.dbcp.BasicDataSource" id="dataSource" destroy-method="close">
		<property name="driverClassName" value="oracle.jdbc.driver.OracleDriver" />
		<property name="url" value="jdbc:oracle:thin:@localhost:1521:xe" />
		<property name="username" value="spring" />
		<property name="password" value="spring" />
	</bean>
	
	<!-- 
		BasicDataSource dataSource = new BasicDataSource();
		dataSource.setDriverClassName("oracle.jdbc.driver.OracleDriver");
		dataSource.setUrl("jdbc:oracle:thin:@localhost:1521:xe");
		dataSource.setUsername("spring");
		dataSource.setPassword("spring");
	 -->
	
	<bean class="org.mybatis.spring.SqlSessionFactoryBean" id="SqlSessionFactory">
		<property name="configLocation" value="classpath:mybatis-config.xml"/>
		<property name="dataSource" ref="dataSource"/>
	</bean>
	
	<!-- 
		SqlSessionFactoryBean sqlSessionFactory = new SqlSessionFactoryBean();
		sqlSessionFactory.setConfigLocation(classpath:mybatis-config.xml);
		sqlSessionFactory.setDataSource(dataSource);
	 -->
	 
	 <bean class="org.mybatis.spring.SqlSessionTemplate" id="SqlSession">
	 	<constructor-arg ref="SqlSessionFactory" />
	 </bean>
	
	<!-- 
		SqlSessionTemplate sqlSession = new SqlSessionTemplate(sqlSessionFactory);
	 -->
	
</beans>
